version: '3.8'

services:
  mysql-video-streaming:
    container_name: mysql-video-streaming
    image: mysql:8.0.19
    env_file:
      - video-streaming-service/env/mysql.env
      - env/docker-compose.env
    volumes:
      - video-service-mysql-volumes:/var/lib/mysql
    ports:
      - '3306:3306'
    command: --default-authentication-plugin=mysql_native_password

  mysql-identity:
    container_name: mysql-identity
    image: mysql:8.0.19
    env_file:
      - identity-service/env/mysql.env
    volumes:
      - identity-service-mysql-volumes:/var/lib/mysql
    ports:
      - '3307:3306'
    command: --default-authentication-plugin=mysql_native_password

  mongo-comments:
    image: mongo:7
    container_name: mongo-comments
    command: mongod --replSet rs0
    environment:
      MONGO_INITDB_ROOT_USERNAME: nqat0919
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - '27017:27017'
    volumes:
      - comments-service-mongo-volumes:/data/db
    healthcheck:
      test: |
        mongosh --eval "try { rs.status().ok } catch (e) { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'localhost:27017' }] }).ok }"
      start_period: 0s
      interval: 500ms
      timeout: 5s
      retries: 5



  mongo-notifications:
    image: mongo
    container_name: mongo-notifications
    environment:
      MONGO_INITDB_ROOT_USERNAME: nqat0919
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - '27018:27017'
    volumes:
      - notifications-service-mongo-volumes:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-server:5.4.0
    depends_on: [ zookeeper ]
    env_file:
      - env/kafka-config.env
    ports:
      - "9092:9092"

  debezium:
    image: quay.io/debezium/connect
    hostname: debezium
    container_name: debezium
    env_file:
      - env/debezium.env
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8083:8083"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - 8081:8081
    depends_on: [zookeeper, kafka]

volumes:
  video-service-mysql-volumes:
  identity-service-mysql-volumes:
  comments-service-mongo-volumes:
  notifications-service-mongo-volumes: